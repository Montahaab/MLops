name: Python CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 1: Set up Python
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Step 2: Install dependencies
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # Step 3: Format check (using black)
    - name: Check code formatting with black
      run: |
        source venv/bin/activate
        pip install black
        black --check ./montaha_aladeb_4ds6_ml_project

    # Step 4: Lint check (using flake8)
    - name: Lint code with flake8
      run: |
        source venv/bin/activate
        pip install flake8
        flake8 ./montaha_aladeb_4ds6_ml_project

    # Step 5: Static analysis (using pylint)
    - name: Run pylint
      run: |
        source venv/bin/activate
        pip install pylint
        pylint ./montaha_aladeb_4ds6_ml_project/**/*.py

    # Step 6: Run security check (using bandit)
    - name: Run security checks with bandit
      run: |
        source venv/bin/activate
        pip install bandit
        bandit -r ./montaha_aladeb_4ds6_ml_project

    # Step 7: Run tests (using pytest)
    - name: Run tests with pytest
      run: |
        source venv/bin/activate
        pip install pytest
        pytest --maxfail=1 --disable-warnings -q

    # Step 8: Build Docker image (optional step if Docker is used)
    - name: Build Docker image
      run: |
        docker build -t your-image-name ./montaha_aladeb_4ds6_ml_project
      
    # Step 9: Push Docker image to DockerHub (optional step)
    - name: Push Docker image to DockerHub
      if: github.ref == 'refs/heads/main'
      run: |
        echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
        docker tag your-image-name your-dockerhub-username/your-image-name:latest
        docker push your-dockerhub-username/your-image-name:latest

    # Step 10: Upload artifact (optional step to store artifacts)
    - name: Upload model artifact
      uses: actions/upload-artifact@v2
      with:
        name: model
        path: ./montaha_aladeb_4ds6_ml_project/model.joblib

    # Step 11: Deploy model (optional, adjust as needed for your deployment)
    - name: Deploy model
      run: |
        # Your deployment script or steps
        echo "Deploying model..."

